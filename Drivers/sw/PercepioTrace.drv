%-
%include PercepioTrace_Files.prg
%-

%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    16.03.2012
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\PercepioTraceSettings.Inc
%define! Abstract Common\PercepioTraceAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_HvTraceInitTraceData
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
#include "%@sdk@ModuleName.h" /* SDK and API used */
#include "%'ModuleName'config.h" /* configuration */

/* Include inherited components */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif

#if %@sdk@'ModuleName'%.CONFIG_SDK_VERSION_USED != %@sdk@'ModuleName'%.CONFIG_SDK_PROCESSOR_EXPERT
  /* prototypes for user events */
%if defined(OnTraceStart)
  void %OnTraceStart(void);
%endif
%if defined(OnTraceStop)
  void %OnTraceStop(void);
%endif
%if defined(OnTraceWrap)
  void %OnTraceWrap(void);
%endif
#endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#include "trcRecorder.h" /* streaming interface */

%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%-
%-BW_CUSTOM_USERTYPE_END
%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceGetTraceBufferSize
%ifdef uiTraceGetTraceBufferSize
#define %'ModuleName'%.%uiTraceGetTraceBufferSize() \
  uiTraceGetTraceBufferSize()

%define! RetVal
%include Common\PercepioTraceuiTraceGetTraceBufferSize.Inc

%endif %- uiTraceGetTraceBufferSize
%-BW_METHOD_END uiTraceGetTraceBufferSize
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetTraceBuffer
%ifdef xTraceGetTraceBuffer
#define %'ModuleName'%.%xTraceGetTraceBuffer() \
  xTraceGetTraceBuffer()

%define! RetVal
%include Common\PercepioTracexTraceGetTraceBuffer.Inc

%endif %- xTraceGetTraceBuffer
%-BW_METHOD_END xTraceGetTraceBuffer
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceStart
%ifdef uiTraceStart
#define %'ModuleName'%.%uiTraceStart() \
  uiTraceStart()
%define! RetVal
%include Common\PercepioTraceuiTraceStart.Inc

%endif %- uiTraceStart
%-BW_METHOD_END uiTraceStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStop
%ifdef vTraceStop
#define %'ModuleName'%.%vTraceStop() \
  vTraceStop()

%include Common\PercepioTracevTraceStop.Inc

%endif %- vTraceStop
%-BW_METHOD_END vTraceStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClear
%ifdef vTraceClear
#define %'ModuleName'%.%vTraceClear() \
  vTraceClear()

%include Common\PercepioTracevTraceClear.Inc

%endif %- vTraceClear
%-BW_METHOD_END vTraceClear
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceRegisterString
%ifdef xTraceRegisterString
#define %'ModuleName'%.%xTraceRegisterString (label) \
  xTraceRegisterString(label)

%define! Parname
%define! RetVal
%include Common\PercepioTracexTraceRegisterString.Inc

%endif %- xTraceRegisterString
%-BW_METHOD_END xTraceRegisterString
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrint
%ifdef vTracePrint
#define %'ModuleName'%.%vTracePrint(chn, str) \
  vTracePrint(chn, str)

%define! Parchn
%define! Parstr
%include Common\PercepioTracevTracePrint.Inc

%endif %- vTracePrint
%-BW_METHOD_END vTracePrint
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrintF
%ifdef vTracePrintF
/* void %'ModuleName'%.%vTracePrintF(traceLabel eventLabel, char *formatStr, ...); */
#define %'ModuleName'%.%vTracePrintF vTracePrintF

%define! PareventLabel
%define! ParformatStr
%define! ParVariable_1
%include Common\PercepioTracevTracePrintF.Inc

%endif %- vTracePrintF
%-BW_METHOD_END vTracePrintF
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetQueueName
%ifdef vTraceSetQueueName
#define %'ModuleName'%.%vTraceSetQueueName(queue, name) \
  vTraceSetQueueName(queue, name)

%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetQueueName.Inc

%endif %- vTraceSetQueueName
%-BW_METHOD_END vTraceSetQueueName
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceSetISRProperties
%ifdef xTraceSetISRProperties
#define %'ModuleName'%.%xTraceSetISRProperties(name, prioritiy) \
  xTraceSetISRProperties(name, prioritiy)

%define! Parname
%define! Parprioritiy
%define! RetVal
%include Common\PercepioTracexTraceSetISRProperties.Inc

%endif %- xTraceSetISRProperties
%-BW_METHOD_END xTraceSetISRProperties
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISRBegin
%ifdef vTraceStoreISRBegin
#define %'ModuleName'%.%vTraceStoreISRBegin(handle) \
  vTraceStoreISRBegin(handle)

%define! Parhandle
%include Common\PercepioTracevTraceStoreISRBegin.Inc

%endif %- vTraceStoreISRBegin
%-BW_METHOD_END vTraceStoreISRBegin
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISREnd
%ifdef vTraceStoreISREnd
#define %'ModuleName'%.%vTraceStoreISREnd(isTaskSwitchRequired) \
  vTraceStoreISREnd(isTaskSwitchRequired)

%define! ParisTaskSwitchRequired
%include Common\PercepioTracevTraceStoreISREnd.Inc

%endif %- vTraceStoreISREnd
%-BW_METHOD_END vTraceStoreISREnd
%-************************************************************************************************************
%-BW_METHOD_BEGIN vGetGDBDumpCommand
%ifdef vGetGDBDumpCommand
void %'ModuleName'%.%vGetGDBDumpCommand(uint8_t *buf, uint16_t bufSize, uint8_t *fileName);
%define! Parbuf
%define! ParbufSize
%define! ParfileName
%include Common\PercepioTracevGetGDBDumpCommand.Inc

%endif %- vGetGDBDumpCommand
%-BW_METHOD_END vGetGDBDumpCommand
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetStopHook
%ifdef vTraceSetStopHook
#define %'ModuleName'%.%vTraceSetStopHook(stopHookFunction) \
  vTraceSetStopHook(stopHookFunction)
%define! ParstopHookFunction
%include Common\PercepioTracevTraceSetStopHook.Inc

%endif %- vTraceSetStopHook
%-BW_METHOD_END vTraceSetStopHook
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetLastError
%ifdef xTraceGetLastError
#define %'ModuleName'%.%xTraceGetLastError() \
  %xTraceGetLastError()
%define! RetVal
%include Common\PercepioTracexTraceGetLastError.Inc

%endif %- xTraceGetLastError
%-BW_METHOD_END xTraceGetLastError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClearError
%ifdef vTraceClearError
#define %'ModuleName'%.%vTraceClearError(resetErrorMessage) \
  vTraceClearError(resetErrorMessage)
%define! ParresetErrorMessage
%define! RetVal
%include Common\PercepioTracevTraceClearError.Inc

%endif %- vTraceClearError
%-BW_METHOD_END vTraceClearError
%-************************************************************************************************************
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceEnable
%ifdef vTraceEnable
#define %'ModuleName'%.%vTraceEnable(startOption) \
  vTraceEnable(startOption)
%define! Parstartoption
%include Common\PercepioTracevTraceEnable.Inc

%endif %- vTraceEnable
%-BW_METHOD_END vTraceEnable
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetSemaphoreName
%ifdef vTraceSetSemaphoreName
#define %'ModuleName'%.%vTraceSetSemaphoreName(semaphore, name) \
  vTraceSetSemaphoreName(semaphore, name)
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetSemaphoreName.Inc

%endif %- vTraceSetSemaphoreName
%-BW_METHOD_END vTraceSetSemaphoreName
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetMutexName
%ifdef vTraceSetMutexName
#define %'ModuleName'%.%vTraceSetMutexName(mutex, name) \
  vTraceSetMutexName(mutex, name)
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetMutexName.Inc

%endif %- vTraceSetMutexName
%-BW_METHOD_END vTraceSetMutexName
%-************************************************************************************************************
%-BW_METHOD_BEGIN Startup
%ifdef Startup
void %'ModuleName'%.%Startup(void);
%include Common\PercepioTraceStartup.Inc

%endif %- Startup
%-BW_METHOD_END Startup
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_METHOD_BEGIN OnTraceStop
%ifdef OnTraceStop
%INTERFACE OnTraceStop
void %OnTraceStop(void);
%include Common\PercepioTraceOnTraceStop.Inc

%endif %- OnTraceStop
%-BW_METHOD_END OnTraceStop
%-BW_METHOD_BEGIN OnTraceStart
%ifdef OnTraceStart
%INTERFACE OnTraceStart
void %OnTraceStart(void);
%include Common\PercepioTraceOnTraceStart.Inc

%endif %- OnTraceStart
%-BW_METHOD_END OnTraceStart
%-BW_METHOD_BEGIN OnTraceWrap
%ifdef OnTraceWrap
%INTERFACE OnTraceWrap
void %OnTraceWrap(void);
%include Common\PercepioTraceOnTraceWrap.Inc

%endif %- OnTraceWrap
%-BW_METHOD_END OnTraceWrap
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\PercepioTraceSettings.Inc
%define! Abstract Common\PercepioTraceAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */
#include "%'ModuleName'.h"
#if %@sdk@'ModuleName'%.CONFIG_SDK_VERSION_USED == %@sdk@'ModuleName'%.CONFIG_SDK_PROCESSOR_EXPERT
%for var from EventModules
  #include "%var.h"
%endfor
#endif
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceGetTraceBufferSize
%ifdef uiTraceGetTraceBufferSize
%define! RetVal
%include Common\PercepioTraceuiTraceGetTraceBufferSize.Inc
/*
dword %'ModuleName'%.%uiTraceGetTraceBufferSize(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- uiTraceGetTraceBufferSize
%-BW_METHOD_END uiTraceGetTraceBufferSize
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetTraceBuffer
%ifdef xTraceGetTraceBuffer
%define! RetVal
%include Common\PercepioTracexTraceGetTraceBuffer.Inc
/*
void* %'ModuleName'%.%xTraceGetTraceBuffer(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceGetTraceBuffer
%-BW_METHOD_END xTraceGetTraceBuffer
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceStart
%ifdef uiTraceStart
%define! RetVal
  %include Common\PercepioTraceuiTraceStart.Inc
/*
dword %'ModuleName'%.%uiTraceStart(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- uiTraceStart
%-BW_METHOD_END uiTraceStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStop
%ifdef vTraceStop
%include Common\PercepioTracevTraceStop.Inc
/*
void %'ModuleName'%.%vTraceStop(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStop
%-BW_METHOD_END vTraceStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClear
%ifdef vTraceClear
%include Common\PercepioTracevTraceClear.Inc
/*
void %'ModuleName'%.%vTraceClear(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceClear
%-BW_METHOD_END vTraceClear
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceRegisterString
%ifdef xTraceRegisterString
%define! Parname
%define! RetVal
%include Common\PercepioTracexTraceRegisterString.Inc
/*
traceString %'ModuleName'%.%xTraceRegisterString(const char* name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceRegisterString
%-BW_METHOD_END xTraceRegisterString
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrint
%ifdef vTracePrint
%define! Parchn
%define! Parstr
%include Common\PercepioTracevTracePrint.Inc
/*
void %'ModuleName'%.%vTracePrint(traceString chn, const char* str)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTracePrint
%-BW_METHOD_END vTracePrint
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrintF
%ifdef vTracePrintF
%define! PareventLabel
%define! ParformatStr
%define! ParVariable_1
%include Common\PercepioTracevTracePrintF.Inc
/*
void %'ModuleName'%.%vTracePrintF(traceLabel eventLabel, char *formatStr, ...)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTracePrintF
%-BW_METHOD_END vTracePrintF
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetQueueName
%ifdef vTraceSetQueueName
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetQueueName.Inc
/*
void %'ModuleName'%.%vTraceSetQueueName(void *queue, char *name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetQueueName
%-BW_METHOD_END vTraceSetQueueName
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceSetISRProperties
%ifdef xTraceSetISRProperties
%define! Parname
%define! Parprioritiy
%define! RetVal
%include Common\PercepioTracexTraceSetISRProperties.Inc
/*
traceHandle %'ModuleName'%.%xTraceSetISRProperties(char *name, char prioritiy)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceSetISRProperties
%-BW_METHOD_END xTraceSetISRProperties
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISRBegin
%ifdef vTraceStoreISRBegin
%define! Parhandle
%include Common\PercepioTracevTraceStoreISRBegin.Inc
/*
void %'ModuleName'%.%vTraceStoreISRBegin(traceHandle handle)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStoreISRBegin
%-BW_METHOD_END vTraceStoreISRBegin
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISREnd
%ifdef vTraceStoreISREnd
%define! ParisTaskSwitchRequired
%include Common\PercepioTracevTraceStoreISREnd.Inc
/*
void %'ModuleName'%.%vTraceStoreISREnd(int isTaskSwitchRequired)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStoreISREnd
%-BW_METHOD_END vTraceStoreISREnd
%-************************************************************************************************************
%-BW_METHOD_BEGIN vGetGDBDumpCommand
%ifdef vGetGDBDumpCommand
%define! Parbuf
%define! ParbufSize
%define! ParfileName
%include Common\PercepioTracevGetGDBDumpCommand.Inc
void %'ModuleName'%.%vGetGDBDumpCommand(uint8_t *buf, uint16_t bufSize, uint8_t *fileName)
{
#if !TRC_USE_TRACEALYZER_RECORDER || (TRC_CFG_RECORDER_MODE==TRC_RECORDER_MODE_STREAMING) /* trace disabled or streaming mode */
  (void)bufSize; /* not used */
  (void)fileName; /* not used */
  /* with RTT streaming, there is no trace buffer */
  *buf = '\0';
#else
  /* construct gdb command string: dump binary memory <file> <hexStartAddr> <hexEndAddr> */
  uint8_t *ptr; /* pointer to data */
  size_t len; /* size/length of data */

  ptr = (uint8_t*)%'ModuleName'%.%xTraceGetTraceBuffer();
  len = %'ModuleName'%.%uiTraceGetTraceBufferSize();
  %@Utility@'ModuleName'%.strcpy(buf, bufSize, (unsigned char*)"dump binary memory ");
  %@Utility@'ModuleName'%.strcat(buf, bufSize, fileName);
  %@Utility@'ModuleName'%.strcat(buf, bufSize, (unsigned char*)" 0x");
  %@Utility@'ModuleName'%.strcatNum32Hex(buf, bufSize, (uint32_t)ptr);
  %@Utility@'ModuleName'%.strcat(buf, bufSize, (unsigned char*)" 0x");
  %@Utility@'ModuleName'%.strcatNum32Hex(buf, bufSize, (uint32_t)(ptr+len));
#endif
}

%endif %- vGetGDBDumpCommand
%-BW_METHOD_END vGetGDBDumpCommand
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetStopHook
%ifdef vTraceSetStopHook
%define! ParstopHookFunction
%include Common\PercepioTracevTraceSetStopHook.Inc
/*
void %'ModuleName'%.%vTraceSetStopHook(TRACE_STOP_HOOK stopHookFunction)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetStopHook
%-BW_METHOD_END vTraceSetStopHook
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetLastError
%ifdef xTraceGetLastError
%define! RetVal
%include Common\PercepioTracexTraceGetLastError.Inc
/*
char* %'ModuleName'%.%xTraceGetLastError(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceGetLastError
%-BW_METHOD_END xTraceGetLastError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClearError
%ifdef vTraceClearError
%define! ParresetErrorMessage
%define! RetVal
%include Common\PercepioTracevTraceClearError.Inc
/*
byte %'ModuleName'%.%vTraceClearError(int resetErrorMessage)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceClearError
%-BW_METHOD_END vTraceClearError
%-************************************************************************************************************
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceEnable
%ifdef vTraceEnable
%define! Parstartoption
%include Common\PercepioTracevTraceEnable.Inc
/*
void %'ModuleName'%.%vTraceEnable(int startOption)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceEnable
%-BW_METHOD_END vTraceEnable
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetSemaphoreName
%ifdef vTraceSetSemaphoreName
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetSemaphoreName.Inc
/*
void %'ModuleName'%.%vTraceSetSemaphoreName(void *semaphore, char *name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetSemaphoreName
%-BW_METHOD_END vTraceSetSemaphoreName
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetMutexName
%ifdef vTraceSetMutexName
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetMutexName.Inc
/*
void %'ModuleName'%.%vTraceSetMutexName(void *mutex, char *name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetMutexName
%-BW_METHOD_END vTraceSetMutexName
%-************************************************************************************************************
%-BW_METHOD_BEGIN Startup
%ifdef Startup
%include Common\PercepioTraceStartup.Inc
void %'ModuleName'%.%Startup(void)
{
#if configUSE_PERCEPIO_TRACE_HOOKS /* FreeRTOS using Percepio Trace */
  vTraceSetFrequency(configSYSTICK_CLOCK_HZ);
  vTraceEnable(%'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE); /* snapshot trace, from startup */
#endif /* configUSE_PERCEPIO_TRACE_HOOKS */
}

%endif %- Startup
%-BW_METHOD_END Startup
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_METHOD_BEGIN OnTraceStop
%ifdef OnTraceStop
%IMPLEMENTATION OnTraceStop
%include Common\PercepioTraceOnTraceStop.Inc
void %OnTraceStop(void)
{
  /* Write your code here ... */
}

%endif %- OnTraceStop
%-BW_METHOD_END OnTraceStop
%-BW_METHOD_BEGIN OnTraceStart
%ifdef OnTraceStart
%IMPLEMENTATION OnTraceStart
%include Common\PercepioTraceOnTraceStart.Inc
void %OnTraceStart(void)
{
  /* Write your code here ... */
}

%endif %- OnTraceStart
%-BW_METHOD_END OnTraceStart
%-BW_METHOD_BEGIN OnTraceWrap
%ifdef OnTraceWrap
%IMPLEMENTATION OnTraceWrap
%include Common\PercepioTraceOnTraceWrap.Inc
void %OnTraceWrap(void)
{
#if 0 /* default implementation for gdb below ... */
  /* Write your code here ... */
  uint8_t buf[64];

  /* GDB: dump binary memory <file> <hexStartAddr> <hexEndAddr> */
  %'ModuleName'%.%vGetGDBDumpCommand(buf, sizeof(buf), "c:\\tmp\\trc.dump");
#endif
}

%endif %- OnTraceWrap
%-BW_METHOD_END OnTraceWrap
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
 %- %'ModuleName'%.vTraceInitTraceData(); /* this needs to be called in PEX_RTOS_INIT()! */
%CODE_END
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%-----------------------------------------------------------------------------------------
%if defined(sdk) & %@sdk@ConfigFilesFolderName <> ""
  %define  ConfigSrcDirFolder %%@sdk@ConfigFilesFolderName/
%else
  %define  ConfigSrcDirFolder
%endif
%----------------------------
%FILE %'DirRel_Code'%'ConfigSrcDirFolder'%'ModuleName'config.h
/**
 * \file
 * \brief Configuration header file for Percepio Trace for FreeRTOS
 * Copyright (c) 2020, Erich Styger
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * This header file is used to configure settings of the Percepio trace.
 */

#ifndef __%'ModuleName'_CONFIG_H
#define __%'ModuleName'_CONFIG_H

#include "trcPortDefines.h"
#include "trcConfig.h"

#if !defined(TRC_CFG_RECORDER_MODE) || !defined(TRC_RECORDER_MODE_SNAPSHOT)
  #error "these macros are used below, but do not exist?"
#endif

#ifndef %'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE
  /* Percepio trace startup mode used for calling vTraceEnable() from Startup():
     Snapshot Mode:
       TRC_INIT: Initializes trace module. Application needs to start tracing later with vTraceEnable(TRC_START);
       TRC_START: Initializes and starts tracing
     Streaming Mode:
       TRC_INIT: Initializes trace module. Application needs to start tracing later with vTraceEnable(TRC_START);
       TRC_START: Initializes and starts tracing
       TRC_START_AWAIT_HOST: Initializes trace module and blocks and waits for data to be retrieved */
  #if TRC_CFG_RECORDER_MODE==TRC_RECORDER_MODE_SNAPSHOT
  %if defined(trcStartupEnableMethodSnapshot)
    #define %'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE    %>60 %trcStartupEnableMethodSnapshot
  %else
    #define %'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE    %>60 TRC_START
  %endif
      /*!< Trace startup for snapshot mode: TRC_INIT or TRC_START */
  #else /* streaming mode */
  %if defined(trcStartupEnableMethodStreaming)
    #define %'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE    %>60 %trcStartupEnableMethodStreaming
  %else
    #define %'ModuleName'%.CONFIG_START_TRACE_IN_STARTUP_MODE    %>60 TRC_START
  %endif
      /*!< Trace startup for streaming mode: TRC_INIT, TRC_START or TRC_START_AWAIT_HOST */
  #endif
#endif

#endif /* __%'ModuleName'_CONFIG_H */
%-----------------------------------------------------------------------------------------
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
