%include SEGGER_SystemView_Files.prg
%-
%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    10.11.2015
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\SeggerSystemViewSettings.Inc
%define! Abstract Common\SeggerSystemViewAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
#include "%@sdk@ModuleName.h" /* SDK and API used */
#include "%'ModuleName'config.h" /* configuration */

/* Include inherited components */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#include "SEGGER_SYSVIEW.h"

%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%-
%-BW_CUSTOM_USERTYPE_END


%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
void %'ModuleName'%.%Init(void);
%include Common\SeggerSystemViewInit.Inc

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN OnUserStart
%ifdef OnUserStart
#define %'ModuleName'%.%OnUserStart(UserId) \
  SEGGER_SYSVIEW_OnUserStart(UserId)

%define! ParUserId
%include Common\SeggerSystemViewOnUserStart.Inc

%endif %- OnUserStart
%-BW_METHOD_END OnUserStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN OnUserStop
%ifdef OnUserStop
#define %'ModuleName'%.%OnUserStop(UserId) \
  SEGGER_SYSVIEW_OnUserStop(UserId)

%define! ParUserId
%include Common\SeggerSystemViewOnUserStop.Inc

%endif %- OnUserStop
%-BW_METHOD_END OnUserStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN RecordEnterISR
%ifdef RecordEnterISR
#define %'ModuleName'%.%RecordEnterISR() \
  SEGGER_SYSVIEW_RecordEnterISR()
%include Common\SeggerSystemViewRecordEnterISR.Inc

%endif %- RecordEnterISR
%-BW_METHOD_END RecordEnterISR
%-************************************************************************************************************
%-BW_METHOD_BEGIN RecordExitISR
%ifdef RecordExitISR
#define %'ModuleName'%.%RecordExitISR() \
  SEGGER_SYSVIEW_RecordExitISR()
%include Common\SeggerSystemViewRecordExitISR.Inc

%endif %- RecordExitISR
%-BW_METHOD_END RecordExitISR
%-************************************************************************************************************
%-BW_METHOD_BEGIN Print
%ifdef Print
#define %'ModuleName'%.%Print(s) \
  SEGGER_SYSVIEW_Print(s)
%define! Pars
%include Common\SeggerSystemViewPrint.Inc

%endif %- Print
%-BW_METHOD_END Print
%-************************************************************************************************************
%-BW_METHOD_BEGIN Warn
%ifdef Warn
#define %'ModuleName'%.%Warn(s) \
  SEGGER_SYSVIEW_Warn(s)
%define! Pars
%include Common\SeggerSystemViewWarn.Inc

%endif %- Warn
%-BW_METHOD_END Warn
%-************************************************************************************************************
%-BW_METHOD_BEGIN Error
%ifdef Error
#define %'ModuleName'%.%Error(s) \
  SEGGER_SYSVIEW_Error(s)
%define! Pars
%include Common\SeggerSystemViewError.Inc

%endif %- Error
%-BW_METHOD_END Error
%-************************************************************************************************************
%-BW_METHOD_BEGIN PrintfHost
%ifdef PrintfHost
#define %'ModuleName'%.%PrintfHost    SEGGER_SYSVIEW_PrintfHost
%define! Pars
%include Common\SeggerSystemViewPrintfHost.Inc

%endif %- PrintfHost
%-BW_METHOD_END PrintfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN PrintfTarget
%ifdef PrintfTarget
#define %'ModuleName'%.%PrintfTarget   SEGGER_SYSVIEW_PrintfTarget
%define! Pars
%include Common\SeggerSystemViewPrintfTarget.Inc

%endif %- PrintfTarget
%-BW_METHOD_END PrintfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN WarnfHost
%ifdef WarnfHost
#define %'ModuleName'%.%WarnfHost  SEGGER_SYSVIEW_WarnfHost
%define! Pars
%include Common\SeggerSystemViewWarnfHost.Inc

%endif %- WarnfHost
%-BW_METHOD_END WarnfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN WarnfTarget
%ifdef WarnfTarget
#define %'ModuleName'%.%WarnfTarget   SEGGER_SYSVIEW_WarnfTarget
%define! Pars
%include Common\SeggerSystemViewWarnfTarget.Inc

%endif %- WarnfTarget
%-BW_METHOD_END WarnfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN ErrorfHost
%ifdef ErrorfHost
#define %'ModuleName'%.%ErrorfHost   SEGGER_SYSVIEW_ErrorfHost
%define! Pars
%include Common\SeggerSystemViewErrorfHost.Inc

%endif %- ErrorfHost
%-BW_METHOD_END ErrorfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN ErrorfTarget
%ifdef ErrorfTarget
#define %'ModuleName'%.%ErrorfTarget   SEGGER_SYSVIEW_ErrorfTarget
%define! Pars
%include Common\SeggerSystemViewErrorfTarget.Inc

%endif %- ErrorfTarget
%-BW_METHOD_END ErrorfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableEvents
%ifdef DisableEvents
#define %'ModuleName'%.%DisableEvents(DisableMask) \
  SEGGER_SYSVIEW_DisableEvents(DisableMask)

%define! ParDisableMask
%include Common\SeggerSystemViewDisableEvents.Inc

%endif %- DisableEvents
%-BW_METHOD_END DisableEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableEvents
%ifdef EnableEvents
#define %'ModuleName'%.%EnableEvents(EnableMask) \
  SEGGER_SYSVIEW_EnableEvents(EnableMask)

%define! ParEnableMask
%include Common\SeggerSystemViewEnableEvents.Inc

%endif %- EnableEvents
%-BW_METHOD_END EnableEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
void %'ModuleName'%.%Deinit(void);
%include Common\SeggerSystemViewDeinit.Inc

%endif %- Deinit
%-BW_METHOD_END Deinit
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\SeggerSystemViewSettings.Inc
%define! Abstract Common\SeggerSystemViewAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%include Common\SeggerSystemViewInit.Inc
void %'ModuleName'%.%Init(void)
{
  SEGGER_SYSVIEW_Conf(); /* initialize Segger System Viewer */
}

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN OnUserStart
%ifdef OnUserStart
%define! ParUserId
%include Common\SeggerSystemViewOnUserStart.Inc
/**
void %'ModuleName'%.%OnUserStart(unsigned UserId)
{
  Implemented as macro on the header file.
}
*/

%endif %- OnUserStart
%-BW_METHOD_END OnUserStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN OnUserStop
%ifdef OnUserStop
%define! ParUserId
%include Common\SeggerSystemViewOnUserStop.Inc
/**
void %'ModuleName'%.%OnUserStop(unsigned UserId)
{
  Implemented as macro on the header file.
}
*/

%endif %- OnUserStop
%-BW_METHOD_END OnUserStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN RecordEnterISR
%ifdef RecordEnterISR
%include Common\SeggerSystemViewRecordEnterISR.Inc
/*
void %'ModuleName'%.%RecordEnterISR(void)
{
  Implemented as macro on the header file.
}
*/

%endif %- RecordEnterISR
%-BW_METHOD_END RecordEnterISR
%-************************************************************************************************************
%-BW_METHOD_BEGIN RecordExitISR
%ifdef RecordExitISR
%include Common\SeggerSystemViewRecordExitISR.Inc
/*
void %'ModuleName'%.%RecordExitISR(void)
{
  Implemented as macro on the header file.
}
*/

%endif %- RecordExitISR
%-BW_METHOD_END RecordExitISR
%-************************************************************************************************************
%-BW_METHOD_BEGIN Print
%ifdef Print
%define! Pars
%include Common\SeggerSystemViewPrint.Inc
/*
void %'ModuleName'%.%Print(const char *s)
{
  Implemented as macro on the header file.
}
*/

%endif %- Print
%-BW_METHOD_END Print
%-************************************************************************************************************
%-BW_METHOD_BEGIN Warn
%ifdef Warn
%define! Pars
%include Common\SeggerSystemViewWarn.Inc
/*
void %'ModuleName'%.%Warn(const char *s)
{
  Implemented as macro on the header file.
}
*/

%endif %- Warn
%-BW_METHOD_END Warn
%-************************************************************************************************************
%-BW_METHOD_BEGIN Error
%ifdef Error
%define! Pars
%include Common\SeggerSystemViewError.Inc
/*
void %'ModuleName'%.%Error(const char *s)
{
  Implemented as macro on the header file.
}
*/

%endif %- Error
%-BW_METHOD_END Error
%-************************************************************************************************************
%-BW_METHOD_BEGIN PrintfHost
%ifdef PrintfHost
%define! Pars
%include Common\SeggerSystemViewPrintfHost.Inc
/*
void %'ModuleName'%.%PrintfHost(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- PrintfHost
%-BW_METHOD_END PrintfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN PrintfTarget
%ifdef PrintfTarget
%define! Pars
%include Common\SeggerSystemViewPrintfTarget.Inc
/*
void %'ModuleName'%.%PrintfTarget(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- PrintfTarget
%-BW_METHOD_END PrintfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN WarnfHost
%ifdef WarnfHost
%define! Pars
%include Common\SeggerSystemViewWarnfHost.Inc
/*
void %'ModuleName'%.%WarnfHost(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- WarnfHost
%-BW_METHOD_END WarnfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN WarnfTarget
%ifdef WarnfTarget
%define! Pars
%include Common\SeggerSystemViewWarnfTarget.Inc
/*
void %'ModuleName'%.%WarnfTarget(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- WarnfTarget
%-BW_METHOD_END WarnfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN ErrorfHost
%ifdef ErrorfHost
%define! Pars
%include Common\SeggerSystemViewErrorfHost.Inc
/*
void %'ModuleName'%.%ErrorfHost(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- ErrorfHost
%-BW_METHOD_END ErrorfHost
%-************************************************************************************************************
%-BW_METHOD_BEGIN ErrorfTarget
%ifdef ErrorfTarget
%define! Pars
%include Common\SeggerSystemViewErrorfTarget.Inc
/*
void %'ModuleName'%.%ErrorfTarget(const char *s, ...)
{
  Implemented as macro on the header file.
}
*/

%endif %- ErrorfTarget
%-BW_METHOD_END ErrorfTarget
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableEvents
%ifdef DisableEvents
%define! ParDisableMask
%include Common\SeggerSystemViewDisableEvents.Inc
/*
void %'ModuleName'%.%DisableEvents(uint32_t DisableMask)
{
  Implemented as macro on the header file.
}
*/

%endif %- DisableEvents
%-BW_METHOD_END DisableEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableEvents
%ifdef EnableEvents
%define! ParEnableMask
%include Common\SeggerSystemViewEnableEvents.Inc
/*
void %'ModuleName'%.%EnableEvents(uint32_t EnableMask)
{
  Implemented as macro on the header file.
}
*/

%endif %- EnableEvents
%-BW_METHOD_END EnableEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
%include Common\SeggerSystemViewDeinit.Inc
void %'ModuleName'%.%Deinit(void)
{
  /* nothing needed */
}

%endif %- Deinit
%-BW_METHOD_END Deinit
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
%CODE_BEGIN
%if (CPUfamily = "S32K")
#ifdef CPU_INIT_MCUONECLIPSE_DRIVERS
%endif
  %'ModuleName'%.%Init(); /* ### %DeviceType "%DeviceName" init code ... */
%if (CPUfamily = "S32K")
#endif
%endif
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
%-----------------------------------------------------------------------------------------
%if defined(sdk) & %@sdk@ConfigFilesFolderName <> ""
  %define  ConfigSrcDirFolder %%@sdk@ConfigFilesFolderName/
%else
  %define  ConfigSrcDirFolder
%endif
%----------------------------
%FILE %'DirRel_Code'%'ConfigSrcDirFolder'%'ModuleName'config.h
/**
 * \file
 * \brief Configuration header file for SeggerSystemView
 * Copyright (c) 2020, Erich Styger
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * This header file is used to configure settings of the Segger SystemView module.
 */
#ifndef __%'ModuleName'_CONFIG_H
#define __%'ModuleName'_CONFIG_H

#ifndef %'ModuleName'%.CONFIG_GENERATE_QUEUE_EVENTS
%if defined(QueueEventsEnabled) && %QueueEventsEnabled='yes'
  #define %'ModuleName'%.CONFIG_GENERATE_QUEUE_EVENTS  (1)
%else
  #define %'ModuleName'%.CONFIG_GENERATE_QUEUE_EVENTS  (0)
%endif
    /*!< 1: events for queues are generated. 0: no queue events are generated */
#endif

#ifndef %'ModuleName'%.CONFIG_GENERATE_ISR_EVENTS
%if defined(ISREventsEnabled) && %ISREventsEnabled='yes'
  #define %'ModuleName'%.CONFIG_GENERATE_ISR_EVENTS  (1)
%else
  #define %'ModuleName'%.CONFIG_GENERATE_ISR_EVENTS  (0)
%endif
    /*!< 1: events for ISR are generated. 0: no ISR events are generated */
#endif

#ifndef %'ModuleName'%.CONFIG_GENERATE_STREAMBUFFER_EVENTS
%if defined(StreamBufferEventsEnabled) && %StreamBufferEventsEnabled='yes'
  #define %'ModuleName'%.CONFIG_GENERATE_STREAMBUFFER_EVENTS  (1)
%else
  #define %'ModuleName'%.CONFIG_GENERATE_STREAMBUFFER_EVENTS  (0)
%endif
    /*!< 1: events for Stream Buffer are generated. 0: no Stream Buffer events are generated */
#endif

#ifndef %'ModuleName'%.CONFIG_GENERATE_STEPTICK_EVENTS
%if defined(vTaskStepTickEventsEnabled) && %vTaskStepTickEventsEnabled='yes'
  #define %'ModuleName'%.CONFIG_GENERATE_STEPTICK_EVENTS  (1)
%else
  #define %'ModuleName'%.CONFIG_GENERATE_STEPTICK_EVENTS  (0)
%endif
    /*!< 1: events for tickets steps are generated. 0: no ticket step events are generated */
#endif

#ifndef %'ModuleName'%.CONFIG_USE_STATIC_BUFFER
%if %SeggerSysviewStaticBuffer='yes'
  #define %'ModuleName'%.CONFIG_USE_STATIC_BUFFER  (1)
%else
  #define %'ModuleName'%.CONFIG_USE_STATIC_BUFFER  (0)
%endif
    /*!< 1: Use a static buffer to generate events instead of a buffer on the stack. 0: Use a buffer on the stack */
#endif

#ifndef %'ModuleName'%.CONFIG_POST_MORTEM_MODE
%if %SeggerSysviewPostMortem='yes'
  #define %'ModuleName'%.CONFIG_POST_MORTEM_MODE   (1)
%else
  #define %'ModuleName'%.CONFIG_POST_MORTEM_MODE   (0)
%endif
    /*!< 1: Enable post mortem analysis. 0: do not use it in post-morem mode */
#endif

#ifndef %'ModuleName'%.CONFIG_RTT_BUFFER_SIZE
  #define %'ModuleName'%.CONFIG_RTT_BUFFER_SIZE    (%RttBufferSize)
    /*!< Buffer size of RTT buffer, default 1024 */
#endif

#ifndef %'ModuleName'%.CONFIG_RTT_CHANNEL
  #define %'ModuleName'%.CONFIG_RTT_CHANNEL        (%RttChannelIndex)
    /*!< RTT channel to be used (default 1) */
#endif

#ifndef %'ModuleName'%.CONFIG_SYSVIEW_RAM_BASE
%if defined(SysViewRamBase)
  #define %'ModuleName'%.CONFIG_SYSVIEW_RAM_BASE    (0x%#l%SysViewRamBase)
%else
  #define %'ModuleName'%.CONFIG_SYSVIEW_RAM_BASE    (0x20000000)
%endif
    /*!< lowest RAM address used */
#endif


#endif /* __%'ModuleName'_CONFIG_H */
%-----------------------------------------------------------------------------------------
